.TH CCDREORDER 1NEMO "26 Dec 2019"
.SH NAME
ccdreorder \- benchmark reordering (with optional openmp)
.SH SYNOPSIS
\fBccdreorder\fP [parameter=value]
.SH DESCRIPTION
Still in benchmark mode only.
.SH PARAMETERS
The following parameters are recognized in any order if the keyword
is also given:
.TP 20
\fBin=\fP
Input file (ignored for now) []  
.TP
\fBout=\fP
Output file (ignored for now) []  
.TP
\fBorder=\fP
New order of output cube (0=first dimension) [0,1,2]
.TP
\fBdims=\fP
Dimensions of the cube. The first listed dimension is the
one fastest running in memory.  In C we use row-major,
so data[30][20][10] in this case.   [10,20,30]   
.TP
\fBseed=\fP
Random seed for [0,1] in the created cube [123]
.TP
\fBiter=\fP
Times to repeat the reorder.
With iter=0 one can conveniently estimate the overhead.  [1]
.SH EXAMPLES
The following benchmarks were tried:
.nf
time ccdreorder . . dims=100,100,100  iter=512 order=0,1,2  #  0.79
time ccdreorder . . dims=100,100,100  iter=512 order=2,1,0  #  2.32
time ccdreorder . . dims=200,200,200  iter=64  order=0,1,2  #  0.96
time ccdreorder . . dims=200,200,200  iter=64  order=2,1,0  #  3.44  
time ccdreorder . . dims=400,400,400  iter=8   order=0,1,2  #  1.71
time ccdreorder . . dims=400,400,400  iter=8   order=2,1,0  #  7.27
time ccdreorder . . dims=800,800,800  iter=1   order=0,1,2  #  7.46
time ccdreorder . . dims=800,800,800  iter=1   order=2,1,0  # 26.62

time ccdreorder  . . dims=11,10000,1000 order=0,2,1 help=cm iter=10  #  11.0
.fi
See also "make bench1" in NEMO/src/image/trans
.SH AUTHOR
Peter Teuben
.SH UPDATE HISTORY
.nf
.ta +1.0i +4.0i
26-Dec-19	V0.1 Created	PJT
.fi
